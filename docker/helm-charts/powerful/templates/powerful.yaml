{{- $baseContext := (dict "Values" $.Values "Template" $.Template)}}
{{- $casesApp := dict "name" "powerful-cases" "deploys" (list .Values.cases) -}}

{{- range $_, $app := append .Values.apps $casesApp }}
{{- if $app.Name }}
{{- $_ := set $app "name" $app.Name }}
{{- end }}
{{ $app := merge (deepCopy $app) $.Values.defaults }}
{{- $appContext := merge $app $baseContext }}
{{- if $app.genService }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $app.name }}
  namespace: {{ $.Release.Name }}
  annotations:
    {{- range $k, $v := $appContext.serviceAnnotations }}
    {{- $value := (tpl $v $appContext) }}
    {{- if $value }}
    {{ $k }}: {{ $value | replace "<pfl_empty>" "" | quote }}
    {{- end }}
    {{- end }}
  labels:
    release: {{ $.Release.Name }}
    {{- range $k, $v := $appContext.serviceLabels }}
    {{- $value := (tpl $v $appContext) }}
    {{- if $value }}
    {{ $k }}: {{ $value | replace "<pfl_empty>" "" | quote }}
    {{- end }}
    {{- end }}
spec:
  type: ClusterIP
  selector:
    powerful-app: {{ $app.name }}
  ports:
  - name: http
    port: {{ if $app.port }} {{ $app.port }} {{ else }} 80 {{ end }}
    targetPort: 8080
{{- if $app.debug }}
  - name: debug
    port: 5005
{{- end }}
{{- end }}
---
{{- $deploys := list (dict) -}}
{{- if $app.deploys -}}
  {{- $deploys = $app.deploys -}}
{{- end -}}

{{- range $index, $deploy := $deploys }}
{{ $deploy := merge (deepCopy $deploy) $app }}
{{- $deployContext := merge $deploy $baseContext }}
{{- $_ := set $deploy "deployName" (tpl $deploy.deployName $deployContext) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploy.deployName }}
  namespace: {{ $.Release.Name }}
  annotations:
    {{- range $k, $v := $deploy.deployAnnotations }}
    {{- $value := (tpl $v $deployContext) }}
    {{- if $value }}
    {{ $k }}: {{ $value | replace "<pfl_empty>" "" | quote }}
    {{- end }}
    {{- end }}
  labels:
    release: {{ $.Release.Name }}
    powerful-app: {{ $app.name }}
    {{- range $k, $v := $deploy.deploymentLabels }}
    {{- $value := (tpl $v $deployContext) }}
    {{- if $value }}
    {{ $k }}: {{ $value | replace "<pfl_empty>" "" | quote }}
    {{- end }}
    {{- end }}
spec:
  replicas: {{ $deploy.replicaCount }}
  selector:
    matchLabels:
      deployName: {{ $deploy.deployName }}
  template:
    metadata:
      annotations:
        {{- range $k, $v := $deploy.annotations }}
        {{- $value := (tpl $v $deployContext) }}
        {{- if $value }}
        {{ $k }}: {{ $value | replace "<pfl_empty>" "" | quote }}
        {{- end }}
        {{- end }}
{{- range $i, $mount := $deploy.mounts }}
{{- if $mount.text }}
{{- $_ := set $mount "text" (tpl $mount.text $deployContext) }}
{{- end }}
{{- if $mount.text }}
        checksum/volume-{{ $i }}: {{ $mount.text | sha256sum }}
{{- end }}
{{- end }}
      labels:
        powerful-app: {{ $app.name }}
        release: {{ $.Release.Name }}
        deployName: {{ $deploy.deployName }}
        {{- range $k, $v := $deploy.labels }}
        {{- $value := (tpl $v $deployContext) }}
        {{- if $value }}
        {{ $k }}: {{ $value | replace "<pfl_empty>" "" | quote }}
        {{- end }}
        {{- end }}
    spec:
      containers:
      - args:
        - demo
        name: app
        env:
        {{- $javaOpts := "" }}
        {{- range $_, $opts := $deploy.javaOpts }}
          {{- $value := (tpl $opts $deployContext) }}
          {{- if (trim $value) }}
             {{- $javaOpts = printf "%s %s" $javaOpts $value }}
          {{- end }}
        {{- end }}
        - name: JAVA_OPTS
          value: {{ $javaOpts | quote }}
{{- if $deploy.env }}
{{- range $envName, $envValue := $deploy.env }}
  {{- $value := (tpl $envValue $deployContext) }}
  {{- if $value }}
        - name: {{ $envName }}
          value: {{ $value | replace "<pfl_empty>" "" | quote }}
  {{- end }}
{{- end }}
{{- end }}
        volumeMounts:
        - name: powerful-cases
          mountPath: /etc/powerful-cases
{{- range $i, $mount := $deploy.mounts }}
{{- if or $mount.text $mount.hostPath }}
        - name: custom-volume-{{ $i }}
          mountPath: {{ $mount.mountPath }}
{{- if $mount.text }}
          subPath: {{ splitList "/" $mount.mountPath | last | quote }}
{{- end }}
{{- end }}
{{- end }}
        {{- if contains ":" $deploy.image }}
        image: "{{ $deploy.hub }}/{{ $deploy.image }}"
        {{- else }}
        image: "{{ $deploy.hub }}/{{ $deploy.image }}:{{ $deploy.tag }}"
        {{- end }}
        imagePullPolicy: Always
        resources:
{{ $deploy.resources | toYaml | indent 10 }}
      volumes:
      - name: powerful-cases
        configMap:
          name: powerful-cases
{{- range $i, $mount := $deploy.mounts }}
{{- if or $mount.text $mount.hostPath }}
      - name: custom-volume-{{ $i }}
{{- if $mount.hostPath }}
        hostPath:
          path: {{ $mount.hostPath }}
{{- else if $mount.text }}
        configMap:
          name: cm-{{ $deploy.deployName }}-{{ $i }}
{{- end }}
{{- end }}
{{- end }}
      imagePullSecrets:
{{- range $name, $_ := $deploy.imagePullSecrets }}
      - name: {{ $name }}
{{- end }}
      nodeSelector:
{{ toYaml $deploy.nodeSelector | indent 8 }}
---
{{- range $i, $mount := $deploy.mounts }}
{{- if $mount.text }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-{{ $deploy.deployName }}-{{ $i }}
  namespace: {{ $.Release.Name }}
  labels:
    release: {{ $.Release.Name }}
data:
  {{ splitList "/" $mount.mountPath | last | quote }}: {{ $mount.text | quote }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
