{{- range $key, $spec := .Values.powerful.services }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $key }}
  namespace: {{ $.Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ $key }}
  ports:
    - port: {{ if $spec.port }} {{ $spec.port }} {{ else }} 80 {{ end }}
      targetPort: {{ $spec.targetPort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    nce-app: {{ $key }}
  name: {{ $key }}
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $key }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ $key }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ $key }}
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - {{ $spec.nodeIp }}
              topologyKey: kubernetes.io/hostname
      containers:
        - name: tomcat
          env:
            - name: JAVA_OPTS
              value: "{{ $spec.javaOpts }} -Dframew.zk=zookeeper://{{ $.Values.powerful.zk }}"
          image: "{{ $.Values.powerful.hub }}/{{ $spec.image }}:{{ $.Values.powerful.tag }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /usr/local/tomcat/logs
              name: log
            - mountPath: /home/framew-agent
              name: framew-agent
            - mountPath: /home/framew-agent/{{ $key }}.yml
              subPath: {{ $key }}.yml
              name: {{ $key }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        framewdemo: "true"
      imagePullSecrets:
      - name: qingzhou-secret
      restartPolicy: Always
      volumes:
        - hostPath:
            path: /home/skiff/framew-demo/{{ $key }}/logs
            type: ""
          name: log
        - hostPath:
            path: /home/skiff/framew-demo/framew-agent
            type: ""
          name: framew-agent
        - configMap:
            name: framew-e2e-config
            items:
              - key: {{ $key }}.yml
                path: {{ $key }}.yml
          name: {{ $key }}
{{- end }}
