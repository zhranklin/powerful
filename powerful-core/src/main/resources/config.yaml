targetMappings:
  a: 127.0.0.1:8080
  b: 127.0.0.1:8081
  c: 127.0.0.1:8082
requestCases:
  a-b-1000:
    times: 10000
    threads: 30
    trace:
      - call: a
      - call: b
    expect:
      cases|(200) -> a|v1(200) -> b|(null): 4800:5200
      cases|(200) -> a|v2(200) -> b|(null): 4800:5200
    description: a访问b, 重复10000次
  a-delay-1s:
    trace:
      - call: a
        delay: 1
    description: 访问a, a加入1s时延
  a-1000-ex60:
    times: 1000
    threads: 30
    trace:
      - call: a
        errorByPercent: 60
    description: 访问a, 60%概率报错
  a-c-delay0-5:
    trace:
      - call: a
        delay: 0.5
      - call: c
        delay: 0.5
    description: 让a访问c, 加入0.5s时延
  normal-b:
    times: 10000
    threads: 30
    trace:
      - call: a
    description: 正常访问b
    expect:
      cases|(200) -> a|v2(null): 4990:5010
      cases|(200) -> a|v1(null): 4990:5010
  normal-all-v1:
    times: 1000
    threads: 30
    trace:
      - call: a/normalTest
    description: 将所有流量流向v1版本
    expect:
      cases|(200) -> a|v1(null): 1000
  prefix-url-hit:
    threads: 30
    times: 10000
    trace:
      - call: a/matchTest/uri/preEcho
    description: 前缀uri，命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8700:9200
      cases|(200) -> a|v2(null): 800:1300
  prefix-url-miss:
    threads: 30
    times: 10000
    trace:
      - call: a/matchTest/uri/mypreEcho
    description: 前缀uri，未命中按5:5分流
    expect:
      cases|(200) -> a|v1(null): 4990:5010
      cases|(200) -> a|v2(null): 4990:5010
  exact-url-hit:
    threads: 30
    times: 10000
    trace:
      - call: a/matchTest/uri/exEcho
    description: 精准uri，命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8800:9200
      cases|(200) -> a|v2(null): 800:1200
  regex-url-hit:
    threads: 30
    times: 10000
    trace:
      - call: a/matchTest/uri/regXcho
    description: 正则uri，命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8800:9200
      cases|(200) -> a|v2(null): 800:1200
  prefix-header-hit:
    threads: 30
    times: 10000
    trace:
      - call: a
        headers:
          source: yanxuan-test
    description: 前缀header(需要source是yanxuan-test开头)，命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8800:9200
      cases|(200) -> a|v2(null): 800:1200
  exact-header-hit:
    threads: 30
    times: 10000
    trace:
      - call: a
        headers:
          source: test
    description: 精准header(需要source=test)，命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8800:9200
      cases|(200) -> a|v2(null): 800:1200
  regex-header-hit:
    threads: 30
    times: 10000
    trace:
      - call: a
        headers:
          source: yanxuan-test
    description: 前缀header(需要source是yanxuan-test开头)，命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8700:9300
      cases|(200) -> a|v2(null): 700:1300
  exact-queryparams-hit:
    threads: 30
    times: 10000
    trace:
      - call: a
        queries:
          key: yanxuan-test
    description: 精准queryparams(需要key=yanxuan-test)，命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8800:9200
      cases|(200) -> a|v2(null): 800:1200
  regex-queryparams-hit:
    threads: 30
    times: 10000
    trace:
      - call: a
        queries:
          key: '42615'
    description: 正则queryparams(需要key是5位数字)，命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8700:9200
      cases|(200) -> a|v2(null): 800:1300
  logic-and-hit:
    times: 10000
    threads: 30
    trace:
      - call: a/loginTest
        headers:
          mysource: test
    description: 测试与逻辑（精准url和精准header），命中按9:1分流
    expect:
      cases|(200) -> a|v1(null): 8700:9200
      cases|(200) -> a|v2(null): 800:1300
  delay-all-10s:
    trace:
      - call: a/delayTest
    description: 100%流量延迟10s
    expect: cases|(200) -> a|v1(null)
  abort-all-500:
    times: 1000
    threads: 30
    trace:
      - call: a/abortTest
    description: 100%流量阻断，返回状态码500
    expect:
      cases|(500) -> fault filter abort: 1000
  redirect-url:
    trace:
      - call: a/redirectURL
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(location)}})"
    description: URL重定向到/normalTest
    expect: cases|(301|http://a/normalTest) -> null
  redirect-authority:
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(location)}})"
    trace:
      - call: a/redirectAuthority
    description: authority重定向到new-a
    expect: cases|(301|http://new-a/redirectAuthority/execute) -> null
  rewrite-url:
    trace:
      - call: a/rewriteURL
    description: URL重写到/normalTest
    expect: cases|(200) -> a|v1(null)
  rewrite-authority:
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(location)}})"
    trace:
      - call: a/redirectAuthority
    description: authority重定向到new-a
    expect: cases|(301|http://new-a/redirectAuthority/execute) -> null
  timeout-1s:
    threads: 50
    times: 1000
    trace:
      - call: a/timeoutTest
      - call: a/abortTest
    description: 容错超时1000ms
    expect:
      cases|(500) -> a|v1(500) -> fault filter abort: 1000
  retry-5-1s-500:
    times: 1000
    threads: 50
    trace:
      - call: a/retryTest
      - call: a/abortTest
    description: 容错超时时间1000ms，重试5次
    expect:
      cases|(500) -> a|v1(500) -> fault filter abort: 1000
  header-req-add:
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(test)}})"
    trace:
      - call: a/headerTest/req/add
    description: 将request增加test：test
    expect: cases|(200|) -> a|v1(null|test)
  header-req-set:
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(test)}})"
    trace:
      - call: a/headerTest/req/set
        headers:
          test: '123'
    description: 将request修改为test：test
    expect: cases|(200|) -> a|v1(null|test)
  header-req-remove:
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(test)}})"
    trace:
      - call: a/headerTest/req/remove
        headers:
          test: '123'
    description: 将request删除header
    expect: cases|(200|) -> a|v1(null|)
  header-resp-add:
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(test)}})"
    trace:
      - call: a/headerTest/resp/add
    description: 将repsonse增加test：test
    expect: cases|(200|test) -> a|v1(null|)
  header-resp-set:
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(test)}})"
    trace:
      - call: a/headerTest/resp/set
        headers:
          test: '123'
    description: 将repsonse修改为test：test
    expect: cases|(200|test) -> a|v1(null|123)
  header-resp-remove:
    traceNodeTmpl: "{{env(APP)}}|{{env(VERSION)}}({{statusCode()}}|{{header(test)}})"
    trace:
      - call: a/headerTest/resp/remove
        headers:
          test: '123'
    description: 将response删除test：test
    expect: cases|(200|) -> a|v1(null|123)
  mirror-all:
    trace:
      - call: a/mirrorTest
    description: 将流量复制给a
    expect: cases|(200) -> a|v1(null)
