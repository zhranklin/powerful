{{- $casesDeploy := unset (set (deepCopy .Values.cases) "version" "default") "name" -}}
{{- $_ := set .Values.cases "deploys" (list $casesDeploy) -}}
{{- $_ := set .Values.cases "name" "powerful-cases" -}}
{{- range $_, $app := append .Values.apps .Values.cases }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $app.name }}
  namespace: {{ include "namespace" $}}
  labels:
    release: {{ $.Release.Name }}
    framew-env: {{ $.Values.framewEnv }}
    framew.zhranklin.io/project: {{ $.Values.framewProject }}
    {{ $.Values.serviceAppLabelName }}: {{ $app.name }}
spec:
  type: ClusterIP
  selector:
    {{ $.Values.appLabelName }}: {{ $app.name }}
  ports:
  - name: http
    port: {{ if $app.port }} {{ $app.port }} {{ else }} 80 {{ end }}
    targetPort: 8080
---
{{- $deploys := list (dict "version" "default") -}}
{{- if $app.deploys -}}
{{- $deploys = $app.deploys -}}
{{- end -}}
{{- range $index, $deploy := $deploys }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $app.name }}{{ include "deployName" $deploy}}
  namespace: {{ include "namespace" $}}
  labels:
    release: {{ $.Release.Name }}
    {{ $.Values.appLabelName }}: {{ $app.name }}
    {{ $.Values.versionLabelName }}: {{ $deploy.version }}
spec:
  replicas: {{ if $deploy.replicaCount }}{{ $deploy.replicaCount }}{{ else }}1{{ end }}
  selector:
    matchLabels:
      deployName: {{ $app.name }}{{ include "deployName" $deploy}}
      {{ $.Values.appLabelName }}: {{ $app.name }}
  template:
    metadata:
      annotations:
{{- if $.Values.istioEnv }}
        framew.zhranklin.io/istioEnv: {{ $.Values.istioEnv }}
{{- end }}
{{- if $.Values.revision }}
        framew.zhranklin.io/revision: {{ $.Values.revision }}
{{- end }}
        sidecar.istio.io/inject: "{{ $deploy.inject | default $.Values.inject }}"
        checksum/config-volume: {{ $.Files.Get "files/cases.yaml" | sha256sum }}
{{- if $deploy.annotations }}
{{ $deploy.annotations | toYaml | indent 8 }}
{{- end }}
      labels:
        release: {{ $.Release.Name }}
        deployName: {{ $app.name }}{{ include "deployName" $deploy}}
        {{ $.Values.appLabelName }}: {{ $app.name }}
        {{ $.Values.versionLabelName }}: {{ $deploy.version }}
{{- if $.Values.istioCluster }}
        istio-cluster: {{ $.Values.istioCluster }}
{{ end }}
{{- if $deploy.mark }}
        framew.zhranklin.io/mark: {{ $deploy.mark | quote }}
{{- end }}
{{- if $deploy.labels }}
{{ $deploy.labels | toYaml | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: app
        env:
        - name: JAVA_OPTS
          value: "-Dserver.port=8080"
        - name: APP
          value: {{ $app.name }}
        - name: VERSION
          value: {{ if eq $deploy.version "default" }}""{{ else }}{{ $deploy.version | quote }}{{ end }}
{{- if $deploy.mark }}
        - name: MARK
          value: {{ $deploy.mark | quote }}
{{- end }}
{{- if $deploy.env }}
{{- range $envName, $envValue := $deploy.env }}
        - name: {{ $envName }}
          value: {{ $envValue | quote }}
{{- end }}
{{- end }}
        volumeMounts:
        - name: powerful-cases
          mountPath: /etc/powerful-cases
{{- if $deploy.image }}
        image: "{{ $.Values.hub }}/{{ $deploy.image }}"
{{- else }}
        image: "{{ $.Values.hub }}/{{ $.Values.image }}"
{{- end }}
        imagePullPolicy: IfNotPresent
{{- if $deploy.resources }}
        resources:
{{ $deploy.resources | toYaml | indent 10 }}
{{- else }}
        resources:
{{- $.Values.defaultResources | toYaml | indent 10 }}
{{ end }}
      volumes:
      - name: powerful-cases
        configMap:
          name: powerful-cases
      imagePullSecrets:
{{- range $.Values.imagePullSecrets }}
      - name: {{ . }}
{{- end }}
{{- if $.Values.nodeSelector }}
      nodeSelector:
{{ toYaml $.Values.nodeSelector | indent 8 }}
{{- end }}
{{- if $.Values.tolerations }}
      tolerations:
{{ toYaml $.Values.tolerations | indent 6 }}
{{- end }}
{{- if $.Values.serviceAccount }}
      serviceAccountName: {{ $.Values.serviceAccount }}
{{- end }}
---
{{- end }}
{{- end }}
