apiVersion: networking.istio.io/v1alpha3
kind: GatewayPlugin
metadata:
  name: d
  namespace: {{ include "namespace" .}}
  labels:
    release: {{ .Release.Name }}
spec:
  gateway:
  - mesh
  plugins:
  - name: envoy.ratelimit
    settings:
      rate_limits:
      - actions:
        - header_value_match:
            descriptor_value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:114909968]
            headers:
            - invert_match: false
              name: id
              regex_match: b_global_share_header_minute
        stage: 0
      - actions:
        - header_value_match:
            descriptor_value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:1194525708]
            headers:
            - invert_match: false
              name: id
              regex_match: b_global_header_minute
        stage: 0
      - actions:
        - header_value_match:
            descriptor_value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:2133179709]
            headers:
            - invert_match: false
              name: id
              regex_match: b_local_header_hour
            - invert_match: false
              name: x-framew-app
              regex_match: b\.{{ include "namespace" .}}
        stage: 0
      - actions:
        - header_value_match:
            descriptor_value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:-806904141]
            headers:
            - invert_match: false
              name: x-framew-app
              regex_match: c\.{{ include "namespace" .}}
        stage: 0
      - actions:
        - header_value_match:
            descriptor_value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:2020817374]
            headers:
            - invert_match: false
              name: id
              regex_match: b_local_header_minute
        stage: 0
  service:
  - d.{{ include "namespace" .}}
---
apiVersion: microservice.netease.com/v1alpha1
kind: SmartLimiter
metadata:
  name: d
  namespace: {{ include "namespace" .}}
  labels:
    release: {{ .Release.Name }}
spec:
  ratelimitConfig:
    rate_limit_conf:
      descriptors:
      - key: header_match
        then: 5/{pod}
        unit: 2
        value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:1194525708]
        when: "true"
      - key: header_match
        then: "10"
        unit: 3
        value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:2133179709]
        when: "true"
      - key: header_match
        then: "5"
        unit: 2
        value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:-806904141]
        when: "true"
      - key: header_match
        then: "5"
        unit: 2
        value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:2020817374]
        when: "true"
      domain: qingzhou
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rate-limit-config-sample
  namespace: {{ include "namespace" .}}
  labels:
    release: {{ .Release.Name }}
data:
  config.yaml: |
    # kubectl -n {{ include "namespace" .}} get cm -ojsonpath='{.data.config\.yaml}'
    # 需要手动将以下配置复制到rls的cm中
    descriptors:
    - key: header_match
      rate_limit:
        requests_per_unit: 10
        unit: MINUTE
      value: Service[d.{{ include "namespace" .}}]-User[none]-Gateway[null]-Api[null]-Id[hash:114909968]
    domain: qingzhou
